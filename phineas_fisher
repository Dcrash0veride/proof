So what is BlackHat OpSec? 

In this instance we are talking about the overall tradecraft, infrastructure, and measures that a nefarious hacker will take in order to evade detection that would compromise their anonymity and lead to incarceration. There’s been a push over the last several years to think like the attacker, however that should extend to understanding all aspects of the attackers domain, not just the methodology; but motive for compromising systems and the tools for remaining autonomous.
When you look at the attacks, and the attackers, it’s pretty easy to see that most attackers motive is money, just like the pen-testers; however there are also the hacktivists who hack for various pet causes and political beliefs. There are also those who do it for the lulz, and in some cases those that did it to further illustrate that the system was vulnerable (ytcracker). There’s a myriad of reasons that people seek to gain unfettered access to a system; and in the case of Gary Mckinnon they just wanted to know if aliens existed.
Before we continue we must also define “Blackhat” hacker. For our purposes a blackhat will be anyone who knowingly accesses data or disrupts systems without consent of the owner of the  data or system, including those  who use technological means to evade capture. I know that is a bit of a stretch, but I wanted to include John Mcafee so I needed to expand the definition a bit. Personally, I’ve always been fascinated with some people’s ability to seemingly bend the rules of any machine to their will and take over the system. 
During the research phase of this paper, I learned that there several parallels between an entity having a good security posture, such as defense in depth, strong passwords, one time pads, shrinking attack surface, disabling or removing unnecessary services, doing baselines, etc., and the overall security posture of a would be attacker. While the entity focuses on defense in depth, the attacker must focus on anonymity in depth. Where the company spends money on infrastructure to serve and balance their content and services the attacker must either purchase or compromise servers to use as a base of operations. In both cases overlooked details and misconfigurations often lead to devastating consequences. 
An ulterior motive for choosing this topic is my admiration of Phineas Fisher. I’ve been watching them for quite some time now and to be honest I’m impressed. Phineas Fisher, who claims to have perpetrated The Gamma Group,  The Hacking Team, The Catalan Police Union, and Turkey, attacks has shown that even companies who sell government grade spyware and remote access technologies, created in house by their own personal teams of hackers are not immune to being breached.  They’ve also been eluding capture, prosecution, and revenge for these attacks for about 24 or so months now and I think that given their chosen targets that must mean that they have a fairly good grasp on OpSec. Unfortunately, as we will uncover, it seems that if anyone goes on for too long, they will make enough mistakes to be caught regardless of how crafty they are. Some of these faults were glaring and I would imagine very embarrassing once the offender was picked up. Some were the result of just trusting the wrong handles at the wrong time and volunteering information that made it possible to narrow down a field of suspects. 



Zoz’s Seven Deadly Fails

Since there’s no need to reinvent the wheel I will default to Zoz’s list of the 7 deadly sins of OpSec from his DefCon 22 talk:

Overconfidence
Trust
Perceived Insignificance
Guilt By Association 
Packet Origin
Cleartext
Documentation

From there we can begin to classify the different types of fails. For this I have established a few categories. First we have the tradecraft fail. Tradecraft is the overall techniques and methods that go into an operation.  Essentially in this category we will find the people that had no business trying to pull anything off. This is where we would find Eldo Kim from the Harvard bomb threat hoax, who did use Tor and did use Guerilla Mail, but failed by using the wifi network that he had registered his machine’s mac address to. Namely, the Harvard wifi network which requires you to register your machine. Tor isn’t useful if you’re on the intended targets network and you have registered your machine. Also since he used an exit node and not a bridge node it was easier to look up the IP address found in the Guerrilla Mail headers, see that it was on Tor and check to see if any students, because not wanting to take finals is a motive, were using the Tor network at the time. In this category we would also find all the the 1337 anon’s who downloaded LOIC (low orbit ion cannon). For example, Brian Thomas Mettenbrink of GI, Nebraska, and used that to help “Anonymous” DDOS the Church of Scientology. They read the guide, downloaded the tool, and had no idea of the implications of their actions. 
The next category is an Anonymity fail. While that may seem related to the tradecraft fail it is slightly different as these fails were perpetrated by people who should have known better. It is in this category we will find Hector Monsegur aka Sabu who co founded LulzSec and notoriously connected to IRC under his handle, without TOR, just once. It’s important to note that he was also on his own connection. The FBI was able to trace the IP back to his residence, and Sabu also had poor operational hygiene and evidence of him exchanging credit card information was also on the machine giving the FBI all they needed for leverage and eventually led to Sabu turning informant. Another fail that belongs in this category is not separating your machines. That is using the same machine you use to do nefarious things as you use for other things. Adrian Crenshaw from irongeek.com demonstrated an attack he called honeydoc’s, where a user on Tor could browse to his site and click on one of the docs. Once the user clicked the doc it didn’t respect the browser settings and essentially phoned home with the real IP address of the user. Infamously,  a variation of this attack was used against Freedom Hosting users. Due to the content that Freedom Hosting allowed on their servers their users were of great interest to the FBI. Tor itself wasn’t compromised, but the FBI did compromise Freedom Hosting and uploaded malicious javascript that used CVE-2013-1690. Anyone running an outdated version of firefox received the magneto payload which instructed their machines to phone home to Virginia with the user’s public IP, mac address, Windows host name, and unique identifier to tie a user to a site. These people were the worst of people and had they updated the default configuration of no script to not allow javascript to execute or updated their browsers they would not have been caught in this initial operation.  Even though Freedom Hosting users deserved this, it is scary to think that an authoritarian regime could use a similar technique to de-anonymize dissenters. 
This leads to our next fail category, the information leak. My favorite example of this fail actually comes from Vice leaking the location of John Mcafee while he was on the run. Vice, who has interviewed a whole host of people that require anonymity and would prefer their location details not be shared was actually on the lam with John Mcafee when they uploaded a photo without scrubbing the metadata which included their GPS coordinates. Due to this leak Mcafee was arrested and deported from Guatemala. While that is one example that really highlights the epitome of leaking information; another popular example is Silk Road. Even though Silk Road was supposed to be a hidden service on Tor, it was leaking it’s IP address due to pulling content from the open internet. It turns out the anti-abuse captcha was misconfigured and allowed the source IP to leak. When investigated, Federal agents discovered a portion of the login page for the server and they now knew the location of the server. This problem is another one of those parallels, where the good guys and the bad guys have something in common. Though the information each want to contain is different, the overall fact is the same. If important configuration information is accessible, the risk should be mitigated if it could lead to a devastating compromise. In this case the actual IP of a hidden service leaking would be similar to a legitimate company transmitting passwords in plaintext. 
The last category of fail is volunteering information. As humans, we are error prone. There’s a myriad of ways we can volunteer information that seemed trivial at the time, but eventually provides a way to narrow down the field of suspects. Human’s and especially politically motivated attackers want their cred, they want comrades, and they want their handle to be known. Unfortunately, Jeremy Hammond is a great example of this mistake. Even as I am writing this I can already see how this is a fail I’m guilty of as well. I’m familiar with Jeremy Hammond’s work, because I spent hours on hackthissite.org when I was a younger lad. I’m already biased. Anyways, we previously discussed Sabu turning informant. Sabu was a co-founder of Lulzsec and Jeremy Hammond AKA sup_g was a vehement activist and freegan. After Sabu turned informant the FBI was able to narrow down their field of suspects after sup_g and other aliases made passing comments in chat about different places they had been arrested. Jeremy Hammond had been being watched since at least 2004 when he spoke at a DefCon conference. Eventually, due to the chat logs the FBI was able to get a warrant to do a correlation attack and they were able to see that when Hammond was home was also when one of his handles would be online talking to Sabu. This would lead to a no knock warrant and the indictment of Hammond. Hammond received 10 years under the CFAA.  This in many ways is also one of the ways DPR was apprehended. Can’t befriend a screen name. Misdirection is favored over honesty. Sabu had even done an AMA on Reddit via Twitter where he said ”Twitter: Stick to yourselves. If you are in a crew - keep your opsec up 24/7. Friends will try to take you down if they have to”. I believe in the zoz talk he states that 1 in 5 hackers are informants. Now I don’t know where that data came from so I can’t really verify, but I’d be willing to bet anyone trying to be your friend online has some kind of agenda. Does anyone remember Chris Hansen’s “How To Catch A Predator”.
Phineas Fisher

So we’ve covered the 4 categories of fail and we’ve seen some high profile examples of how those fails led to the eventual arrest of the people involved, but I would like to take some time to look over Phineas Fisher’s work and see where they may be guilty of breaking some of these rules and how we could use that to deduce some information about them. 
As stated previously Phineas Fisher, who took their name from the hack of Gamma Group, has successfully attacked two high profile cyber arms dealers as well as the Turkish government. The attacks against the cyber arms dealers were considered to be advanced given that the victim entities were comprised of InfoSec experts. We also know that the motive of these attacks were political; which they’ve pointed out to be a change to their usual modus operandi. They stated in their posts that they created Phineas to separate that activity from their day to day activities as a black hat hacker. We know that they have claimed targets in the UK, Italy, Spain, and Turkey and appear to be fluent in both Spanish and English as well as have a working knowledge of Catalan. The DIY guides read like one part manifesto, one part reference, and one part bragging. We know that they have a distaste for white hat’s and believe that the hacker culture only exists in it’s aesthetic anymore. Despite their apparent distaste they did give a weird kind of shout out to Spanish security researcher Chema Alonso during their attack on the Catalan Police Union website. They even mentioned on the hack back twitter feed that they named their Kali vm that, because they thought it was funny given Chema Alonso’s stance on information pirates, but that they had learned a great deal from his books. As far as I can tell from the minimal sleuthing I’ve done his earliest book was in 2009. Unfortunately, I was unable to find more information about their books as the ISBN numbers didn’t seem to translate properly.
In addition to the references to Chema Alonso, there is also a reference to a blogger, Andres Delgado-Ron, as well as twitter user @cthulhusec where people are directed to send their spear phishing attempts, and death threats in Italian. They include an email address to reach them, but ask for only encrypted mail and provide their PGP key. We can also see on the hack back twitter that they sympathize with Jeremy Hammond. When discussing the US prison system hack back said “For me, the US prison system is personal, since most hackers - no matter where they're from - get extradited there”. This seems to indicate that they aren’t from the US or currently in the US. The Hacking Team write-up is dedicated to the victims of the raid on the Armando Diaz school.
At this point I think it is fair to say that Phineas would be guilty of at least two of the sins of OpSec. The first being overconfidence. Not only are they picking ambitious targets, but they are detailing their set-up including possible distributions and the individual tools, going as far as trying to use ettercap since it was made by members of The Hacking Team. They’ve openly taunted their victims, and bragged about using money stolen from a bank to donate to a resistance group in Syria. 
The second mistake would be slowly leaking information. For now it’s not much to go on, but I did find the Andres Delgado-Ron link interesting as it’s a person in Vancouver, who is a graduate student and a research assistant at the LIU institute at UBC which conducts and facilitates policy relevant research on global issues. Andres Delgado’s website is mostly in Spanish, however they do have some English posts as well as a comic series and some poetry. It’s an  odd site to me as they also cover wikileaks and use GPG, but outside of following hack back don’t really seem to be following much for information security. The tone of Delgado’s English posts seem very different from the tone in the guides so I don’t suspect them to be the same person. It’s also possible that Andres is translating the guides, however it doesn’t seem likely as the video has the attacker typing in English. Politically it would seem these two people could be friends, however they have different ideas of how to affect change. Also, Delgado wrote one of the first stories about the Hacking Team exploit on a site called gkillcity.com and listed his location as in Ecuador.
In addition to those interesting tidbits of information, both Delgado-Ron and @CthuluSec have posts referencing an email, listserv, and VPN service that is ran by “anarchist activists” who would rather pull the plug on service than comply with surveillance. According to an article written on November 23rd 2016, by William Gillis and posted on the Center for a Stateless Society website, the service known as Riseup had been updating a canary to confirm that they had not received a gag order, however they have not updated the canary which seems to signal that they are complying with a gag order. They tweeted that they have no intention of pulling the plug and the author of that article interpreted that to mean that they are complying with a gag order, but fighting the surveillance demand. 
The other contact, the @cthulusec link is Thomas White, who is a British Tor hidden service developer and administrator and has hosted a number of data dumps including The Hacking Team. It would also appear that he operates OpenXMPP which is also used by Delgado.  While still not much to go on, finding people who follow Chema Alonso, CthuluSec, Andres, hack back, free jeremy hammond, or someone that most of them all follow, who speaks multiple languages and seems in touch with the industry would probably begin the process of narrowing down the possible suspects. 
We also have an idea of what tools they use and their general methodology. Although they insist that they try to vary their tool use so as to leave different signatures we do know that they will be using open source tools and in both the write-up tutorial and the video demonstration they used a system that had meterpreter on it. In the past they had mentioned wanting to use ettercap against a specific target, because the original authors of the tool worked for hacking team. I don’t think it’s out of the realm of possibility for those two authors to update the tool and possibly use a bit of the functionality we saw with the Umbreon and Espereon rootkit packages, for example since ettercap requires libpcap and Zlibc, which already overrides the open() function and other similar system functions of the C library. They could theoretically replace both libraries.  which are dependencies anyways, and add a  phone home component using the public IP address without alerting the user due to zlibc and libpcap being able to manipulate what the user sees from the command line as far as processes and network information go. Unless they read through the source before they compiled it and didn’t simply apt-get upgrade they wouldn’t be any wiser, however you would think they have retired their use of that tool. We also know that the attacker will be using Tor and in the video demonstration they typed that the Catalan Police Union was using a geoip plugin and blocking all non-Spain IP space, however since the vulnerability wasn’t in that part of the site they continued to use the relay at 46.28.110.136. I used exoneraTOR to verify this node was used as a relay on the date of the attack. I was able to see this information when pausing the video at 1:38 and looking at the error message in the bottom of their browser. I also know that Phineas uses DNS tunneling as a guaranteed means of egress and exfiltration, because they told me so in their DIY guide. I took note of the TOR node at that location which is nicknamed NormalCitizen, which seems a little coincidental considering the attackers espoused beliefs. I then used a Torstatus tracker torstatus.blutmagie.de to locate further information regarding the node. The uptime of the node was only 11 hours (at the time of checking), however the exit policy was much different than many other nodes I checked. This is the exit policy for the NormalCitizen node:
Exit Policy Information
reject 0.0.0.0/8:*
reject 169.254.0.0/16:*
reject 127.0.0.0/8:*
reject 192.168.0.0/16:*
reject 10.0.0.0/8:*
reject 172.16.0.0/12:*
reject 46.28.110.136:*
reject 171.161.202.200:*
reject 23.4.252.69:*
reject 23.4.250.108:*
reject 104.123.192.160:*
reject 104.123.201.222:*
reject 104.123.228.37:*
reject 104.123.159.169:*
accept *:20-21
accept *:23
accept *:53
accept *:79
accept *:81
accept *:110
accept *:143
accept *:443
accept *:554
accept *:1194
accept *:5222-5223
accept *:5900
accept *:6660-6669
accept *:6697
accept *:11371
reject *:*

As you can see it has quite a few abnormalities. Most of the other nodes I checked were simply reject *:* and many others only allowed a few ports. This node however accepts on several common ports such as FTP, Telnet, DNS, IMAP, POP3, etc. Given that additional information I think it would be plausible to script checking each node that is up on Torstatus and retrieving the exit policies to find ones that are similar and start looking there. An interesting aside is that this node is hosted by wedos in CZ. While checking exit nodes in the list I found 27 that exist from wedos, and a family starting with budweisonion that all had separate family parameters and most had very relaxed exit policies. The datacenter these are in also have IP camera’s available for watching, however it appears that very few of them are for viewing the DC and are more concentrated on hallways. I guess that would be useful if you want to check and see if the DC is currently being occupied by a police presence. 

Putin it all together

With all this information on various ways to fail at OpSec, how do we put it all together in a way that will work, most of the time? Luckily, Phineas Fisher, and many others have written short guides on how to do that. First, you should always encrypt your hard drive, even if the the police seize your machines as long as you weren’t logged in when they did it, as Ross Ulbricht and the proprietor of Freedom Hosting were, law enforcement will have to deal with that. Now I am aware of a “bug” in LUKS where you can hold the enter key down for about 60 seconds and get dropped into an INITRAMFS shell, however I see that as more of a feature than an issue. 
Secondly, use a virtual machine on your host machine and route all traffic through TOR or I2P. This helps to accomplish separating your real life from your work. At this point, I personally think TOR is compromised. Researchers at Carnegie Mellon compromised the anonymity of Tor using a Sybil attack, essentially meaning they added a ton of relay nodes. If you control enough of the relay nodes it becomes much easier to see how traffic is moving through the network and undoes the anonymity TOR provides. While this happened awhile ago, many people were arrested due to the cooperation of CMU and the FBI. So if we are going to use TOR it may make sense to invest in a few relay nodes and exit nodes of our own, just in case something like that could happen again. Of course, the hosting of these nodes would need to be anonymous and paid for in cryptocurrency. I2p is another option, but doesn’t have near the user base or funding (be it from the defense department or not) TOR does. Tor does claim to have fixed this issue, however we talk about the failings of internet security, because of the trust model and in Tor’s own documentation if I want to run more than one relay I’m asked “If you do decide to run more than one relay, please set the "MyFamily" config option in the torrc of each relay, listing all the relays (comma-separated) that are under your control:
   MyFamily $fingerprint1,$fingerprint2,$fingerprint3...That way clients will know to avoid using more than one of your relays in a single circuit.” I am assuming this means that if I don’t set that flag, and I don’t join them all at the same time, they may not be any wiser and I can indeed have users use multiple relays on a single circuit. Even with all these known issues it’s better to use Tor than to not use Tor, however as we saw with Jeremy Hammond it is possible to correlate the times you are on Tor with the time your handle is active. In order to try and avoid this there are a few methods we can use. We can use someone else’s wifi, but that will still be within a certain range of our machine, we could connect to a VPN, but we would either need to host our own VPN requiring more anonymous hosting and cryptocurrency, or purchase VPN services, again anonymously and in cryptocurrency, but also review their logging policies and test for any leaks in the VPN. Also, I believe you would need to connect to TOR first and then the VPN and not VPN and then TOR. If the VPN provider is told to start logging your activity and your connecting directly from home, it’s game over. We also know that The Shadow Group’s supposed dump of NSA TAO tools, included tools to sniff keys off of VPN connections. At any rate the goal is to route our traffic through as many nodes as we can whether it be from Tor, i2P or other compromised systems and zombies. We need to layer anonymity to avoid capture and not let any information slip that would help to conclude our whereabouts or narrow the field of suspects. 
	So now that we have an anonymized connection to the interwebz, it’s time to connect to the infrastructure that would be used. This would include domain names, stable servers, and already compromised pivot points. The domain names provide a means for DNS tunneling for egress to the stable servers where we host our C&C, receive reverse shells, and store the loot. Make sure the domain names you purchase are mundane. I once inserted a PTR record for a client in a colo with the domain name snitchesgetstitchesfuckthefed.com. Curiosity got the best of me and although the site was mostly what you would expect, but I did find that they were selling credit card lists, and I felt obligated to report this as a violation of our AUP to the head of abuse team. We will use compromised systems as the pivot points to direct our attacks through so as to not reveal our C&C ip space.  With all this infrastructure in place you can see that tracking from each hop would be a nightmare, and if you own some of the hops you can remove log entries at will and repurpose devices as necessary.  Depending on the operation, it may be worthwhile to register new domain names and spin up new instances for each new target to prevent attribution. We can use something like keypassx in a separate encrypted VM, to store usernames and passwords using a keyfile and password protected database. This provides a sort of 2FA requiring something we know (password) and something we have (keyfile from somewhere else such as USB). Once you’ve completed the intended means of the operation retire all handles, delete all associated evidence, forensics is possible on deleted information so make sure the wipe is worthwhile, however with enough layers of anonymity it should be very difficult to get the originating IP address. 
Now, that we’ve pulled of our intended operation, the only thing we really need to do is avoid attribution. There’s a number of ways to do this without messing it up. Back to the use of one handle per op, depending on the intent of the op we have a number of options available. Even if we are trying to run an underground enterprise such as silk road and we are turning to the open internet for help regarding some of the finer aspects of systems administration and development, we need to use one time handles to avoid leaving a breadcrumb trail. After all this has been done the only thing left to contend with is our own ego. People knowing you are super leet, or people taking credit for ops you did, aren’t worth outting yourself.

Syn-ack-fin

So as we’ve heard so far there are a plethora of ways for a nefarious attacker to betray themselves, whether it be from a lack of knowledge, precaution, or just letting too much information slip through the cracks. Unfortunately, OpSec doesn’t apply to just nefarious attackers, but it also has to apply to dissidents, journalists, and other legitimate netizens that reside in authoritarian regimes, gfw anyone? We’ve seen that there are plenty of ways to enhance anonymity, but it’s a never ending game of cat and mouse. I would like to cover a couple ways to help enhance your OpSec capabilities. 
Tradecraft. We’ve got to learn not only what commands to run to get what information, but what information we are exchanging with the target when we do that. Essentially, we need learn by being both the red team (attacker) and the the blue team (defender) to see where we could have made it harder for either side. The easiest way to do this is to simply spin up a system and have it provide a service and then to attack it. This can be accomplished easily by using Metasploitable, Damn Vulnerable Web Application, Damn Vulnerable Linux, a number of websites, or even renting a vps or going through a HaaS provider and setting up basic services on the open internet attacking them( and being attacked) and learning how to prevent it and how to prevent being logged. If you go the HaaS route, be prepared to harden certain services immediately.  
Practicing anonymity can be somewhat difficult in the first place. The rumor is that even Googling TAILS or TOR will get you placed on a list, however at least the TOR list would be fairly long, and the more average everyday people on it the better. Now, I do not advise perusing the “darknet”, however not everything located in that section of the internet is harmful. In some places simply speaking out against the status quo is illegal. The darknet really just refers to the places that don’t show up in a search, whether it be because it’s a hidden service or they simply have their robots.txt file explicitly telling the various search engines that respect robots.txt to not index them. In some cases regimes blacklist whatever doesn’t fit the official narrative and even trying to access this information is enough to cause you issues. I found during the course of this rabbit hole of research, that there was an anarchist website where someone had posted an article, and many years later after the site was dormant it was updated asking for an admin or anyone with access to remove the article as the regime was investigating the family.
Another thing we want to do is become familiar with the information that is leaving the system. This was a little more scary than I thought, the simple act of visiting pretty much any website  initiates what seems to be a never ending stream of connections. The advertisements have to load, the cdn needs to pull up the images, and eventually the content I was actually trying to get to appears. I don’t have any social media accounts, but almost anytime I browse to a site I see my machine making connections with facebook servers. Outside of that becoming familiar with the listening connections and what they are for is helpful, especially if something new starts to show up. In some cases it would be even more useful to check the information leaving your machine from an upstream device just in case there’s anything preventing you from seeing the real traffic leaving your machine. 
The last part is really just social engineering all over again. It doesn’t matter if you’re a 1337 h@x0r, someone who just started working the help desk, or just working in a position at a company that makes you a target, you will need to be aware of the information you are volunteering to unverified entities. I’ve actually seen someone give out root credentials to a server, because the “client” on the other end was loud, rushed, and it took the technician by surprise. It was not the client and we had to update the password, and notify the client. 
With all that said I set certain restrictions on myself for completing the research into Phineas Fisher. I used no sorcery, no hidden services, created no accounts. All of the information I was able to gather was done using simple google searches, except for the whois query I ran on the IP address of the tor node, but I could have done that using a website as well. 

Works Cited

Zoz. “Don't Fuck It Up.” 6 Jan. 2015, Las Vegas, DefCon 22. 

Gallagher, Kevin. “The Harvard Bomb Threat Suspect Was Caught Using Tor.” The Daily Dot, The Daily Dot, 18 Dec. 2013, www.dailydot.com/crime/tor-harvard-bomb-suspect/. 

“We Are Legion,” director. Brian Knappenberger, 2012. 

Leyden, John. “The 'One Tiny Slip' That Put LulzSec Chief Sabu in the FBI's Pocket.” www.theregister.co.uk/2012/03/07/lulzsec_takedown_analysis/. 

Crenshaw, Adrian. “Dropping Doc's, or How Tor Users Got Caught.” 4 Dec. 2016, Las Vegas, DefCon 22.

poulsen, Kevin. “FBI's PC Spy Malware Tactics Revealed.” WIRED UK, Wired, 6 Aug. 2014, www.wired.co.uk/article/operation-torpedo-fbi. 

Biddle, Sam. “Caught on Tape: The Moment John McAfee Realized Vice Screwed Him.” Gawker, Gawker, 16 Feb. 2015, internet.gawker.com/caught-on-tape-the-moment-john-mcafee-realized-vice-sc-1686153662.

Krebs, Brian. “Krebs on Security.” Krebs on Security RSS, Krebs, 16 Sept. 2014, krebsonsecurity.com/2014/09/dread-pirate-sunk-by-leaky-captcha/.

Collier, Kevin. “The Fall of the FBI’s Most-Wanted Cybercriminal.” The Kernel RSS, The Daily Dot, 10 Aug. 2014, kernelmag.dailydot.com/issue-sections/headline-story/9895/jeremy-hammond-fbi-surveillance-bust/. 

https://www.reddit.com/r/IAmA/comments/kpfsp/ama_request_sabu_from_lulsec_this_would_be_amazing/c2ps8tv/

http://pastebin.com/raw/0SNSvyjJ

https://pbs.twimg.com/media/Ci52PAgWEAUBRIN.jpg

Delgado-ron, Andres. “Los Enemigos De Internet Fueron Hackeados.” GKillCity, Gkillcity, 7 July 2015, gkillcity.com/articulos/el-mirador-politico/los-enemigos-internet-fueron-hackeados

Gillis, William. “Riseup’s Canary Has Died.” Center for a Stateless Society, William Gillies, 23 Nov. 2016, c4ss.org/content/47015. 

ettercap.sourceforge.net/about.html

https://tune.pk/video/6528544/hack

https://exonerator.torproject.org/?ip=46.28.110.136&timestamp=2016-05-15

http://torstatus.blutmagie.de/router_detail.php?FP=d30226d0f4771e93b562ac650c9093931408d8bd

https://datacentrum.wedos.com/webcam/cam-dc-1.html?fmode=photo&dtm=2016-12-05-06-59

Khandelwal, Swati. “This Hack Gives Linux Root Shell Just By Pressing 'ENTER' for 70 Seconds.” The Hacker News, 16 Nov. 2016, thehackernews.com/2016/11/hacking-linux-system.html. 

Hill, Kashmir. “The Attack That Broke the Dark Web-and How Tor Plans to Fix It.” Fusion, Fusion, 30 Nov. 2015, fusion.net/story/238742/tor-carnegie-mellon-attack/. 

https://www.torproject.org/docs/faq#MultipleRelays

Orr, Andrew. “VPN Passwords Recovered From NSA Hack | LiquidVPN.” LiquidVPN, LiquidVPN, 21 Aug. 2016, www.liquidvpn.com/vpn-passwords-recovered-nsa-hack/

http://flag.blackened.net/forums/viewtopic.php?f=10&t=76996








	
